name: Pull Request Tests
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  runcheck:
    name: Check if run-ci is requested
    runs-on: ubuntu-20.04
    outputs:
      cirun: ${{ steps.check.outputs.cirun }}

    steps:
    - name: Check
      id: check
      run: |
        if [ ${{ github.event_name }} == pull_request ]; then
          sha=${{ github.event.pull_request.head.sha }}
          url=$(echo ${{ github.event.pull_request.head.repo.git_commits_url }} | sed "s:{/sha}:/$sha:")
        elif [ ${{ github.event_name }} == push ]; then
          sha=${{ github.event.after }}
          url=$(echo ${{ github.event.repository.git_commits_url }} | sed "s:{/sha}:/$sha:")
        fi

        message="$(curl -sS -H $app $url | jq '.message')"
        echo $message | grep run-ci >/dev/null 2>&1 && d=$? || d=$?
        if [ $d -eq 0 ]; then
          echo "::set-output name=cirun::yes"
        elif [ $d -eq 1 ]; then
          echo "::set-output name=cirun::no"
        fi
        printf "Commit message is %s\n" "$message"

  build:
    name: Build
    needs: runcheck
    runs-on: ubuntu-20.04
    if: needs.runcheck.outputs.cirun == 'yes'

    steps:
    - name: Build step 1
      run: |
        sleep 20
        echo "I am building"

  test:
    name: Test
    needs: build
    runs-on: ubuntu-20.04

    steps:
    - name: Test step 1
      run: |
        sleep 120
        echo "I am testing"
